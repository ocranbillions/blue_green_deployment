# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
  docker: circleci/docker@2.0.2
  aws-eks: circleci/aws-eks@0.2.3
  kubernetes: circleci/kubernetes@0.4.0

jobs:
  lint-code:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: install eslint
          command: |
            sudo npm i -g eslint && sudo npm install
      - run:
          name: run lint
          command: |
            . run_linter.sh

  build-and-push:
    machine: true
    steps:
      - checkout
      - run: |
          echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin

      # build the application image
      - run: docker build -t ocranbillions/capstone .

      # deploy the image
      - run: docker push ocranbillions/capstone

  deploy-infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: yum install -y tar gzip
      - run:
          name: Deploy server
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/server.yml \
              --tags project=capstone-tag \
              --stack-name "capstone-stack-${CIRCLE_WORKFLOW_ID:0:7}" \
              --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:7}"  
      - run:
          name: Add server ip to ansible inventory
          command: |
            aws ec2 describe-instances \
              --query 'Reservations[*].Instances[*].PublicIpAddress' \
              --filters "Name=tag:project,Values=capstone-tag" \
              --output text >> .circleci/ansible/inventory.txt
            echo "Print inventory.txt content"
            cat .circleci/ansible/inventory.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - project/.circleci/ansible/inventory.txt
  
  configure-infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["13:b3:8b:18:d3:33:6f:ef:6a:a0:04:7c:d0:76:ea:35"]
      - attach_workspace:
          at: ~/
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible
            cat .circleci/ansible/inventory.txt
      - run:
          name: Configure server
          command: |
            echo "Print inventory.txt content"
            cat ~/project/.circleci/ansible/inventory.txt
            echo "List directory content"
            ls
            ansible-playbook \
              -i ~/project/.circleci/ansible/inventory.txt \
              .circleci/ansible/configure-server.yml

  test-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          # install-kubectl: true
      - run:
          command: |
            kubectl get services && sleep 300
          name: Test cluster

workflows:
  default:
    jobs:
      - lint-code
      # - build-and-push:
          # requires: [lint-code]
      
      # - deploy-infrastructure:
      #     requires: [build-and-push]
      # - configure-infrastructure:
      #     requires: [deploy-infrastructure]

      - aws-eks/create-cluster:
          cluster-name: my-eks-demo
          # requires: [build-and-push]
      - test-cluster:
          cluster-name: my-eks-demo
          requires:
            - aws-eks/create-cluster
      # - aws-eks/delete-cluster:
      #     cluster-name: my-eks-demo
      #     requires:
      #       - test-cluster
