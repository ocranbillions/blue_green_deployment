# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
  docker: circleci/docker@2.0.2
  aws-eks: circleci/aws-eks@2.1.1
  kubernetes: circleci/kubernetes@1.3

jobs:
  lint-code:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: install eslint
          command: |
            sudo npm i -g eslint && sudo npm install
      - run:
          name: run lint
          command: |
            . run_linter.sh

  build-and-push:
    machine: true
    steps:
      - checkout
      - run: |
          echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin

      # build the application image
      - run: docker build -t ocranbillions/capstone .

      # deploy the image
      - run: docker push ocranbillions/capstone

  deploy-image:
    docker:
      - image: 'cimg/python:3.10'
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          command: |
            # kubectl get services && sleep 300

            kubectl get services

            dockerpath="ocranbillions/capstone"
            kubectl run --image=ocranbillions/capstone capstone --port=8080
            kubectl get pod
            kubectl port-forward pod/capstone 8080:8080
            
          name: Deploy image

workflows:
  default:
    jobs:
      - lint-code
      - build-and-push:
          requires: [lint-code]
      - aws-eks/create-cluster:
          cluster-name: my-eks-green
          requires: [build-and-push]
      - deploy-image:
          cluster-name: my-eks-green
          requires:
            - aws-eks/create-cluster
